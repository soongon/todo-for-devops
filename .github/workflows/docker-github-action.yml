# GitHub Actions Workflow: Docker 이미지 빌드 후 Docker Hub에 푸시하고, 원격 VM에서 pull 후 실행
name: 🚀 Deploy Next.js App with Docker

on:
  push:
    branches:
      - docker-ci-cd-03

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 🐳 Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🛠️ Build and Tag Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-next-app:latest .

      - name: 📤 Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/todo-next-app:latest

      - name: 🚀 Deploy via SSH (Pull & Restart)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VM_HOST }}
          username: azureuser
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/todo-next-app:latest

            docker stop todo-next-app || true
            docker rm todo-next-app || true
            docker run -d --name todo-next-app -p 3000:3000 \
              -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
              ${{ secrets.DOCKER_USERNAME }}/todo-next-app:latest

            # 🔍 현재 상태 확인
            echo "=== 현재 디렉토리 상태 ==="
            pwd
            whoami
  
            # 🧹 기존 파일/디렉토리 완전 삭제
            echo "=== 기존 파일 삭제 ==="
            sudo rm -rf /home/azureuser/app
            
            # 📁 디렉토리 생성
            echo "=== 디렉토리 생성 ==="
            mkdir -p /home/azureuser/app/nginx
            ls -la /home/azureuser/app/nginx
  
            # 📝 파일 생성 (방법 1: echo 사용)
            echo "=== echo로 파일 생성 시도 ==="
            echo 'server {
              listen 80;
              server_name _;
              location / {
                proxy_pass http://todo-next-app:3000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection '\''upgrade'\'';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
              }
            }' > /home/azureuser/app/nginx/default.conf
  
            # ✅ 파일 생성 확인
            echo "=== 파일 생성 확인 ==="
            ls -la /home/azureuser/app/nginx/
            file /home/azureuser/app/nginx/default.conf
            cat /home/azureuser/app/nginx/default.conf
            
            # 🚀 nginx 실행
            docker stop nginx-reverse-proxy || true
            docker rm nginx-reverse-proxy || true
            docker run -d --name nginx-reverse-proxy -p 80:80 \
            -v /home/azureuser/app/nginx/default.conf:/etc/nginx/conf.d/default.conf \
            --link todo-next-app:todo-next-app \
            nginx:stable-alpine
